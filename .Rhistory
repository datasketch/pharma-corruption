devtools::install_github("datasketch/pharma-corruption")
shiny::runApp('inst/pharma-corruption-app')
shiny::runApp('inst/pharma-corruption-app')
runApp('inst/pharma-corruption-app')
shiny::runApp('inst/pharma-corruption-app')
devtools::install_github("datasketch/hgchmagic", ref = "767c3867535994f1a1fd8c24594d40db3128843d")
runApp('inst/pharma-corruption-app')
## code to prepare `DATASET` dataset goes here
library(dplyr)
library(jsonlite)
library(tidyr)
library(purrr)
# read data ---------------------------------------------------------------
googledrive::drive_deauth()
googledrive::drive_download("https://drive.google.com/file/d/1pGGRJV9RH3yBeG4qXdNBL64HsxELd47B/view",
path = "data-raw/data/aimon.json", overwrite = TRUE)
data_pharma <- stream_in(file("data-raw/data/aimon.json"))
View(data_pharma)
data_pharma$`Published-at` <- lubridate::as_date(
lubridate::ymd_hms(data_pharma$`Published Date`))
data_pharma$`Corruption Case Study`[data_pharma$`Corruption Case Study`] <- "Yes"
data_pharma$`Published-at` <- lubridate::as_date(
lubridate::ymd_hms(data_pharma$`Published Date`))
data_pharma$Published.Date
data_pharma <- data_pharma |>
rename( URL = url,
`Media type` = `media-type`,
`Source` = `Source Name`,
`English title` = `Title`,
`Publication year` = `Year`,
`Publication date` = `Published Date`,
`Country / region` = `Country/Region`,
`Corruption case study` = `Corruption Case Study`,
`Associated topic` = `topics`,
`Links to similar articles` = `Similar Stories Links`,
`Titles of similar articles`= `Similar Stories Titles`,
`Corruption categories` = `Corruption Categories`,
`Health categories` = `Health Categories`)
library(dplyr)
library(jsonlite)
library(tidyr)
library(purrr)
# read json as list
data_pharma <- stream_in(file("data-raw/data/aimon.json"))
data_pharma$`Published-at` <- lubridate::as_date(
lubridate::ymd_hms(data_pharma$`Published Date`))
data_pharma$`Corruption Case Study`[data_pharma$`Corruption Case Study`] <- "Yes"
## code to prepare `DATASET` dataset goes here
library(dplyr)
library(jsonlite)
library(tidyr)
library(purrr)
# read data ---------------------------------------------------------------
googledrive::drive_deauth()
googledrive::drive_download("https://drive.google.com/file/d/1pGGRJV9RH3yBeG4qXdNBL64HsxELd47B/view",
path = "data-raw/data/aimon.json", overwrite = TRUE)
data_pharma <- stream_in(file("data-raw/data/aimon.json"))
## code to prepare `DATASET` dataset goes here
library(dplyr)
library(jsonlite)
library(tidyr)
library(purrr)
# read json as list
# ls <- lapply(readLines("data-raw/data/aimon.json"), fromJSON)
# read data ---------------------------------------------------------------
googledrive::drive_deauth()
googledrive::drive_download("https://drive.google.com/file/d/1pGGRJV9RH3yBeG4qXdNBL64HsxELd47B/view",
path = "data-raw/data/aimon.json", overwrite = TRUE)
data_pharma <- stream_in(file("data-raw/data/aimon.json"))
data_pharma$`Published-at` <- lubridate::as_date(
lubridate::ymd_hms(data_pharma$`Published Date`))
names(data_pharma)
## code to prepare `DATASET` dataset goes here
library(dplyr)
library(jsonlite)
library(tidyr)
library(purrr)
# read data ---------------------------------------------------------------
googledrive::drive_deauth()
googledrive::drive_download("https://drive.google.com/file/d/1pGGRJV9RH3yBeG4qXdNBL64HsxELd47B/view",
path = "data-raw/data/aimon.json", overwrite = TRUE)
data_pharma <- stream_in(file("data-raw/data/aimon.json"))
names(data_pharma)
names(data_pharma) <- gsub("\\.", " ", names(data_pharma))
View(data_pharma)
data_pharma$`Published-at` <- lubridate::as_date(
lubridate::ymd_hms(data_pharma$`Published Date`))
data_pharma$`Corruption Case Study`[data_pharma$`Corruption Case Study`] <- "Yes"
View(data_pharma)
View(data_pharma)
data_pharma <- data_pharma |>
rename( URL = url,
`Media type` = `media-type`,
`Source` = `Source Name`,
`English title` = `Title`,
`Publication year` = `Year`,
`Publication date` = `Published Date`,
`Country / region` = `Country/Region`,
#`Corruption case study` = `Corruption Case Study`,
`Associated topic` = `topics`,
`Links to similar articles` = `Similar Stories Links`,
`Titles of similar articles`= `Similar Stories Titles`,
`Corruption categories` = `Corruption Categories`,
`Health categories` = `Health Categories`)
data_pharma <- data_pharma |>
rename( URL = url,
`Media type` = `media type`,
`Source` = `Source Name`,
`English title` = `Title`,
`Publication year` = `Year`,
`Publication date` = `Published Date`,
`Country / region` = `Country/Region`,
#`Corruption case study` = `Corruption Case Study`,
`Associated topic` = `topics`,
`Links to similar articles` = `Similar Stories Links`,
`Titles of similar articles`= `Similar Stories Titles`,
`Corruption categories` = `Corruption Categories`,
`Health categories` = `Health Categories`)
names(data_pharma)
data_pharma <- data_pharma |>
rename( URL = url,
`Media type` = `media type`,
`Source` = `Source Name`,
`English title` = `Title`,
`Publication year` = `Year`,
`Publication date` = `Published Date`,
#`Corruption case study` = `Corruption Case Study`,
`Associated topic` = `topics`,
`Links to similar articles` = `Similar Stories Links`,
`Titles of similar articles`= `Similar Stories Titles`,
`Corruption categories` = `Corruption Categories`,
`Health categories` = `Health Categories`)
## code to prepare `DATASET` dataset goes here
library(dplyr)
library(jsonlite)
library(tidyr)
library(purrr)
# read json as list
# ls <- lapply(readLines("data-raw/data/aimon.json"), fromJSON)
# read data ---------------------------------------------------------------
googledrive::drive_deauth()
googledrive::drive_download("https://drive.google.com/file/d/1pGGRJV9RH3yBeG4qXdNBL64HsxELd47B/view",
path = "data-raw/data/aimon.json", overwrite = TRUE)
data_pharma <- stream_in(file("data-raw/data/aimon.json"))
View(data_pharma)
names(data_pharma) <- gsub("\\.", " ", names(data_pharma))
data_pharma$`Published-at` <- lubridate::as_date(
lubridate::ymd_hms(data_pharma$`Published Date`))
data_pharma$`Corruption.Case.Study`[data_pharma$`Corruption.Case.Study`] <- "Yes"
data_pharma$`Corruption.Case.Study`
data_pharma$`Corruption Case Study`[data_pharma$`Corruption Case Study`] <- "Yes"
data_pharma$`Corruption Case Study`[is.na(data_pharma$`Corruption Case Study`)] <- "No"
data_pharma <- data_pharma |>
rename( URL = url,
`Media type` = `media type`,
`Source` = `Source Name`,
`English title` = `Title`,
`Publication year` = `Year`,
`Publication date` = `Published Date`,
`Corruption case study` = `Corruption Case Study`,
`Associated topic` = `topics`,
`Links to similar articles` = `Similar Stories Links`,
`Titles of similar articles`= `Similar Stories Titles`,
`Corruption categories` = `Corruption Categories`,
`Health categories` = `Health Categories`)
id_names <- tolower(paste0("id_",
gsub("\\.", "_",make.names(names(data_pharma)))))
class_var <- purrr::map(data_pharma, class) |> unlist()
dic_pharma <- dplyr::tibble(id = id_names,
label = names(data_pharma),
ftype = class_var)
paste_vector <- function(x, collapse = ",") {
paste0(trimws(unique(x)), collapse = collapse)
}
var_list <- dic_pharma |>
filter(ftype == "list") |>
pull(label)
var_list <- var_list[-grep("Other Articles|entityname", var_list)]
unlist_pharma <- map(var_list, function (by) {
print(by)
df <- data_pharma |>
select(`story-id`, {{ by }}) |>
unnest({{ by }}, keep_empty = TRUE) |>
group_by(`story-id`) |>
dplyr::summarise_each(funs(paste_vector))
df
}) |>  reduce(left_join, by = "story-id")
names(data_pharma)
# read data ---------------------------------------------------------------
googledrive::drive_deauth()
googledrive::drive_download("https://drive.google.com/file/d/1pGGRJV9RH3yBeG4qXdNBL64HsxELd47B/view",
path = "data-raw/data/aimon.json", overwrite = TRUE)
data_pharma <- stream_in(file("data-raw/data/aimon.json"))
names(data_pharma) <- gsub("\\.", " ", names(data_pharma))
data_pharma$`Published-at` <- lubridate::as_date(
lubridate::ymd_hms(data_pharma$`Published Date`))
data_pharma$`Corruption Case Study`[data_pharma$`Corruption Case Study`] <- "Yes"
data_pharma$`Corruption Case Study`[is.na(data_pharma$`Corruption Case Study`)] <- "No"
data_pharma <- data_pharma |>
rename( URL = url,
story_id = `story id`,
`Media type` = `media type`,
`Source` = `Source Name`,
`English title` = `Title`,
`Publication year` = `Year`,
`Publication date` = `Published Date`,
`Corruption case study` = `Corruption Case Study`,
`Associated topic` = `topics`,
`Links to similar articles` = `Similar Stories Links`,
`Titles of similar articles`= `Similar Stories Titles`,
`Corruption categories` = `Corruption Categories`,
`Health categories` = `Health Categories`)
id_names <- tolower(paste0("id_",
gsub("\\.", "_",make.names(names(data_pharma)))))
class_var <- purrr::map(data_pharma, class) |> unlist()
dic_pharma <- dplyr::tibble(id = id_names,
label = names(data_pharma),
ftype = class_var)
paste_vector <- function(x, collapse = ",") {
paste0(trimws(unique(x)), collapse = collapse)
}
var_list <- dic_pharma |>
filter(ftype == "list") |>
pull(label)
var_list <- var_list[-grep("Other Articles|entityname", var_list)]
unlist_pharma <- map(var_list, function (by) {
print(by)
df <- data_pharma |>
select(`story-id`, {{ by }}) |>
unnest({{ by }}, keep_empty = TRUE) |>
group_by(`story-id`) |>
dplyr::summarise_each(funs(paste_vector))
df
}) |>  reduce(left_join, by = "story-id")
# read data ---------------------------------------------------------------
googledrive::drive_deauth()
googledrive::drive_download("https://drive.google.com/file/d/1pGGRJV9RH3yBeG4qXdNBL64HsxELd47B/view",
path = "data-raw/data/aimon.json", overwrite = TRUE)
data_pharma <- stream_in(file("data-raw/data/aimon.json"))
names(data_pharma) <- gsub("\\.", " ", names(data_pharma))
data_pharma$`Published-at` <- lubridate::as_date(
lubridate::ymd_hms(data_pharma$`Published Date`))
names(data_pharma) <- gsub("\\.", " ", names(data_pharma))
data_pharma$`Published-at` <- lubridate::as_date(
lubridate::ymd_hms(data_pharma$`Published Date`))
data_pharma$`Corruption Case Study`[data_pharma$`Corruption Case Study`] <- "Yes"
data_pharma$`Corruption Case Study`[is.na(data_pharma$`Corruption Case Study`)] <- "No"
data_pharma <- data_pharma |>
rename( URL = url,
`story-id` = `story id`,
`Media type` = `media type`,
`Source` = `Source Name`,
`English title` = `Title`,
`Publication year` = `Year`,
`Publication date` = `Published Date`,
`Corruption case study` = `Corruption Case Study`,
`Associated topic` = `topics`,
`Links to similar articles` = `Similar Stories Links`,
`Titles of similar articles`= `Similar Stories Titles`,
`Corruption categories` = `Corruption Categories`,
`Health categories` = `Health Categories`)
id_names <- tolower(paste0("id_",
gsub("\\.", "_",make.names(names(data_pharma)))))
class_var <- purrr::map(data_pharma, class) |> unlist()
dic_pharma <- dplyr::tibble(id = id_names,
label = names(data_pharma),
ftype = class_var)
paste_vector <- function(x, collapse = ",") {
paste0(trimws(unique(x)), collapse = collapse)
}
var_list <- dic_pharma |>
filter(ftype == "list") |>
pull(label)
var_list <- var_list[-grep("Other Articles|entityname", var_list)]
unlist_pharma <- map(var_list, function (by) {
print(by)
df <- data_pharma |>
select(`story-id`, {{ by }}) |>
unnest({{ by }}, keep_empty = TRUE) |>
group_by(`story-id`) |>
dplyr::summarise_each(funs(paste_vector))
df
}) |>  reduce(left_join, by = "story-id")
unlist_pharma <- map(var_list, function (by) {
print(by)
df <- data_pharma |>
select(`story-id`, {{ by }}) |>
unnest({{ by }}, keep_empty = TRUE) |>
group_by(`story-id`) |>
dplyr::summarise_each(list(paste_vector))
df
}) |>  reduce(left_join, by = "story-id")
data_pharma <- data_pharma[-grep(paste0(var_list, collapse = "|"),
names(data_pharma))]
data_pharma <- data_pharma |> left_join(unlist_pharma)
View(data_pharma)
## code to prepare `DATASET` dataset goes here
library(dplyr)
library(jsonlite)
library(tidyr)
library(purrr)
# read json as list
# ls <- lapply(readLines("data-raw/data/aimon.json"), fromJSON)
# read data ---------------------------------------------------------------
googledrive::drive_deauth()
googledrive::drive_download("https://drive.google.com/file/d/1pGGRJV9RH3yBeG4qXdNBL64HsxELd47B/view",
path = "data-raw/data/aimon.json", overwrite = TRUE)
data_pharma <- stream_in(file("data-raw/data/aimon.json"))
names(data_pharma) <- gsub("\\.", " ", names(data_pharma))
data_pharma$`Published-at` <- lubridate::as_date(
lubridate::ymd_hms(data_pharma$`Published Date`))
data_pharma$`Corruption Case Study`[data_pharma$`Corruption Case Study`] <- "Yes"
data_pharma$`Corruption Case Study`[is.na(data_pharma$`Corruption Case Study`)] <- "No"
data_pharma <- data_pharma |>
rename( URL = url,
`story-id` = `story id`,
`Media type` = `media type`,
`Source` = `Source Name`,
`English title` = `Title`,
`Publication year` = `Year`,
`Publication date` = `Published Date`,
`Corruption case study` = `Corruption Case Study`,
`Associated topic` = `topics`,
`Links to similar articles` = `Similar Stories Links`,
`Titles of similar articles`= `Similar Stories Titles`,
`Corruption categories` = `Corruption Categories`,
`Health categories` = `Health Categories`)
# create dic --------------------------------------------------------------
id_names <- tolower(paste0("id_",
gsub("\\.", "_",make.names(names(data_pharma)))))
class_var <- purrr::map(data_pharma, class) |> unlist()
dic_pharma <- dplyr::tibble(id = id_names,
label = names(data_pharma),
ftype = class_var)
# list as vectors ---------------------------------------------------------
paste_vector <- function(x, collapse = ",") {
paste0(trimws(unique(x)), collapse = collapse)
}
var_list <- dic_pharma |>
filter(ftype == "list") |>
pull(label)
var_list <- var_list[-grep("Other Articles|entityname", var_list)]
unlist_pharma <- map(var_list, function (by) {
print(by)
df <- data_pharma |>
select(`story-id`, {{ by }}) |>
unnest({{ by }}, keep_empty = TRUE) |>
group_by(`story-id`) |>
dplyr::summarise_each(list(paste_vector))
df
}) |>  reduce(left_join, by = "story-id")
data_pharma <- data_pharma[-grep(paste0(var_list, collapse = "|"),
names(data_pharma))]
data_pharma <- data_pharma |> left_join(unlist_pharma)
# save data and dic -------------------------------------------------------
usethis::use_data(data_pharma, overwrite = TRUE)
usethis::use_data(dic_pharma, overwrite = TRUE)
devtools::load_all()
devtools::document()
devtools::install()
names(data_pharma)
devtools::load_all()
devtools::document()
devtools::install()
data_pharma$`location lat`
## code to prepare `DATASET` dataset goes here
library(dplyr)
library(jsonlite)
library(tidyr)
library(purrr)
# read json as list
# ls <- lapply(readLines("data-raw/data/aimon.json"), fromJSON)
# read data ---------------------------------------------------------------
googledrive::drive_deauth()
googledrive::drive_download("https://drive.google.com/file/d/1pGGRJV9RH3yBeG4qXdNBL64HsxELd47B/view",
path = "data-raw/data/aimon.json", overwrite = TRUE)
data_pharma <- stream_in(file("data-raw/data/aimon.json"))
names(data_pharma) <- gsub("\\.", " ", names(data_pharma))
data_pharma$`Published-at` <- lubridate::as_date(
lubridate::ymd_hms(data_pharma$`Published Date`))
data_pharma$`Corruption Case Study`[data_pharma$`Corruption Case Study`] <- "Yes"
data_pharma$`Corruption Case Study`[is.na(data_pharma$`Corruption Case Study`)] <- "No"
data_pharma <- data_pharma |>
rename( URL = url,
`story-id` = `story id`,
`Media type` = `media type`,
`Source` = `Source Name`,
`English title` = `Title`,
`Publication year` = `Year`,
`Publication date` = `Published Date`,
`Corruption case study` = `Corruption Case Study`,
`Associated topic` = `topics`,
`Links to similar articles` = `Similar Stories Links`,
`Titles of similar articles`= `Similar Stories Titles`,
`Corruption categories` = `Corruption Categories`,
`Health categories` = `Health Categories`)
# create dic --------------------------------------------------------------
id_names <- tolower(paste0("id_",
gsub("\\.", "_",make.names(names(data_pharma)))))
class_var <- purrr::map(data_pharma, class) |> unlist()
dic_pharma <- dplyr::tibble(id = id_names,
label = names(data_pharma),
ftype = class_var)
# list as vectors ---------------------------------------------------------
paste_vector <- function(x, collapse = ",") {
paste0(trimws(unique(x)), collapse = collapse)
}
var_list <- dic_pharma |>
filter(ftype == "list") |>
pull(label)
var_list <- var_list[-grep("Other Articles|entityname", var_list)]
unlist_pharma <- map(var_list, function (by) {
print(by)
df <- data_pharma |>
select(`story-id`, {{ by }}) |>
unnest({{ by }}, keep_empty = TRUE) |>
group_by(`story-id`) |>
dplyr::summarise_each(list(paste_vector))
df
}) |>  reduce(left_join, by = "story-id")
data_pharma <- data_pharma[-grep(paste0(var_list, collapse = "|"),
names(data_pharma))]
data_pharma <- data_pharma |> left_join(unlist_pharma)
data_pharma$`location lat` <- as.numeric(data_pharma$`location lat`)
data_pharma$`location lon` <- as.numeric(data_pharma$`location lon`)
# save data and dic -------------------------------------------------------
usethis::use_data(data_pharma, overwrite = TRUE)
usethis::use_data(dic_pharma, overwrite = TRUE)
data_pharma$`location lat`
devtools::load_all()
devtools::document()
devtools::install()
## code to prepare `DATASET` dataset goes here
library(dplyr)
library(jsonlite)
library(tidyr)
library(purrr)
# read json as list
# ls <- lapply(readLines("data-raw/data/aimon.json"), fromJSON)
# read data ---------------------------------------------------------------
googledrive::drive_deauth()
googledrive::drive_download("https://drive.google.com/file/d/1pGGRJV9RH3yBeG4qXdNBL64HsxELd47B/view",
path = "data-raw/data/aimon.json", overwrite = TRUE)
data_pharma <- stream_in(file("data-raw/data/aimon.json"))
names(data_pharma) <- gsub("\\.", " ", names(data_pharma))
data_pharma$`Published-at` <- lubridate::as_date(
lubridate::ymd_hms(data_pharma$`Published Date`))
data_pharma$`Corruption Case Study`[data_pharma$`Corruption Case Study`] <- "Yes"
data_pharma$`Corruption Case Study`[is.na(data_pharma$`Corruption Case Study`)] <- "No"
data_pharma <- data_pharma |>
rename( URL = url,
`story-id` = `story id`,
`Media type` = `media type`,
`Source` = `Source Name`,
`English title` = `Title`,
`Publication year` = `Year`,
`Publication date` = `Published Date`,
`Corruption case study` = `Corruption Case Study`,
`Associated topic` = `topics`,
`Links to similar articles` = `Similar Stories Links`,
`Titles of similar articles`= `Similar Stories Titles`,
`Corruption categories` = `Corruption Categories`,
`Health categories` = `Health Categories`)
# create dic --------------------------------------------------------------
id_names <- tolower(paste0("id_",
gsub("\\.", "_",make.names(names(data_pharma)))))
class_var <- purrr::map(data_pharma, class) |> unlist()
dic_pharma <- dplyr::tibble(id = id_names,
label = names(data_pharma),
ftype = class_var)
# list as vectors ---------------------------------------------------------
paste_vector <- function(x, collapse = ",") {
paste0(trimws(unique(x)), collapse = collapse)
}
var_list <- dic_pharma |>
filter(ftype == "list") |>
pull(label)
var_list <- var_list[-grep("Other Articles|entityname", var_list)]
unlist_pharma <- map(var_list, function (by) {
print(by)
df <- data_pharma |>
select(`story-id`, {{ by }}) |>
unnest({{ by }}, keep_empty = TRUE) |>
group_by(`story-id`) |>
dplyr::summarise_each(list(paste_vector))
df
}) |>  reduce(left_join, by = "story-id")
data_pharma <- data_pharma[-grep(paste0(var_list, collapse = "|"),
names(data_pharma))]
data_pharma <- data_pharma |> left_join(unlist_pharma)
data_pharma$`location lat` <- as.numeric(data_pharma$`location lat`)
data_pharma$`location lon` <- as.numeric(data_pharma$`location lon`)
# save data and dic -------------------------------------------------------
usethis::use_data(data_pharma, overwrite = TRUE)
usethis::use_data(dic_pharma, overwrite = TRUE)
