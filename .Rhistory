# create data file
usethis::use_data_raw()
library(jsonlite)
fromJSON("data-raw/data/aimon.json")
fromJSON("data-raw/data/aimon.json", simplifyVector = F)
jsonlite::fromJSON("data-raw/data/aimon.json")
lapply(readLines("data-raw/data/aimon.json"), fromJSON)
instancesfile <- stream_in(file("data-raw/data/aimon.json"))
View(instancesfile)
ls <- lapply(readLines("data-raw/data/aimon.json"), fromJSON)
class(instancesfile)
View(instancesfile[[11]][[1]])
names(ls)
ls[[1]]
library(jsonlite)
instancesfile <- stream_in(file("data-raw/data/aimon.json"))
data_pharma <- stream_in(file("data-raw/data/aimon.json"))
usethis::use_data(data_pharma, overwrite = TRUE)
View(instancesfile)
View(data_pharma)
class(data_pharma)
View(data_pharma)
min(data_pharma$`Published Date`)
max(data_pharma$`Published Date`)
lubridate::ymd_hms(data_pharma$`Published Date`)
lubridate::ymd_hms(lubridate::ymd_hms(data_pharma$`Published Date`))
lubridate::as_date(lubridate::ymd_hms(data_pharma$`Published Date`))
min(lubridate::as_date(lubridate::ymd_hms(data_pharma$`Published Date`)))
max(lubridate::as_date(lubridate::ymd_hms(data_pharma$`Published Date`)))
unique(lubridate::as_date(lubridate::ymd_hms(data_pharma$`Published Date`)))
data_pharma <- stream_in(file("data-raw/data/aimon.json"))
data_pharma$`Published-at` <- lubridate::as_date(lubridate::ymd_hms(data_pharma$`Published Date`))
unique(data_pharma$Title)
usethis::use_data(data_pharma, overwrite = TRUE)
unique(data_pharma$`Published-at`)
range_date <- c("2022-08-08", "2022-11-13")
data <- data_pharma
var_date <- "Published-at"
data |>
dplyr::filter({{ var_date }} >= range_date[1] &
{{ var_date }} <= range_date[2])
data |>
dplyr::filter(!!{{ var_date }} >= range_date[1] &
!!{{ var_date }} <= range_date[2])
range_date[1]
range_date[2]
d <- data |>
dplyr::filter(!!{{ var_date }} >= range_date[1] &&
!!{{ var_date }} <= range_date[2])
data |>
dplyr::filter(!!{{ var_date }} >= range_date[1]
)
z <- data |>
dplyr::filter(!!{{ var_date }} >= range_date[1]
)
View(z)
range_date[1]
d <- data |>
dplyr::filter({{ var_date }} >= range_date[1]
)
d <- data |>
dplyr::filter({{ var_date }} <= range_date[1]
)
d <- data |>
dplyr::filter({{ var_date }} > range_date[1]
)
range_date <- lubridate::as_date(c("2022-08-08", "2022-11-13"))
d <- data |>
dplyr::filter({{ var_date }} > range_date[1]
)
range_date[1]
range_date[1]:range_date[2]
range_date <- lubridate::as_date(c("2022-08-08", "2022-11-13"))
range_date[1]:range_date[2]
range_date <- c("2022-08-08", "2022-11-13")
range_date[1]:range_date[2]
library(data.table)
library(data.table)
data_pharma$`Published-at` %between% range_date
library(data.table)
library(data.table)
library(data.table)
d <- data[data_pharma$`Published-at` %between% range_date]
d <- data[data_pharma$`Published-at` %between% range_date,]
unique(d$`Published-at`)
by <- "Published-at"
d <- data[data[[by]] %between% range_date,]
range_date <- c("2022-08-08", NULL)
d <- data[data[[by]] %between% range_date,]
length(range_date)
if (length(range_date) == 2) {
data_filter <- data[data[[by]] %between% range_date,]
} else {
data_filter <-  data |>
dplyr::filter({{ var_date }} == range_date)
}
var_date
data_filter <-  data |>
dplyr::filter(`Published-at` == range_date)
data_filter <-  data |>
dplyr::filter(!!{{ var_date }} == range_date)
!!dplyr::sym(var_date)
var_date
library(dplyr)
data_filter <-  data |>
dplyr::filter(!!dplyr::sym(var_date) == range_date)
unique(data$`Published-at`)
range_date <- c("2022-08-08", "2022-11-13")
d <- data |>
dplyr::filter(!!dplyr::sym(var_date) > range_date[1] &&
!!dplyr::sym(var_date) <= range_date[2])
d <- data |>
dplyr::filter(!!dplyr::sym(var_date) >= range_date[1] &
!!dplyr::sym(var_date) <= range_date[2])
min_date <- min(data[[by]], na.rm = TRUE)
max_date <- max(data[[by]], na.rm = TRUE)
# add test to generic functions
usethis::use_test("compat-utils")
devtools::load_all()
